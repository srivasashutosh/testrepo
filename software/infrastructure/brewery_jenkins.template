{
  "AWSTemplateFormatVersion" : "2010-09-09",
  
  "Description" : "CloudFormation Template to provision Manatee Jenkins instance",
  
  "Parameters" : {
      
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "Default" : "cd30",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },

    "InstanceType" : {
      "Description" : "Jenkins EC2 instance type",
      "Type" : "String",
      "Default" : "c1.medium",
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

	"ApplicationName" : {
	  "Type" : "String",
	  "Default" : "jenkins"
	},
	
	"HostedZone" : {
	  "Type" : "String",
	  "Default" : "oneclickdeployment.com"
	},

    "S3Bucket" : {
	  "Description" : "Artifact Bucket",
	  "Type" : "String",
	  "Default" : "cdcourse"
    },
    "S3KeysBucket" : {
	  "Description" : "Artifact Bucket",
	  "Type" : "String",
	  "Default" : "cd00creds"
    }
  },
  
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "32" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "cc1.4xlarge" : { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "32" : "ami-ed65ba84", "64" : "ami-e565ba8c" }
    }
  },
    
  "Resources" : {     
      
    "CfnUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path": "/",
        "Policies": [{
          "PolicyName": "root",
          "PolicyDocument": { "Statement":[{
            "Effect":"Allow",
            "Action":"*",
            "Resource":"*"
          }
        ]}
       }]
      }
    },
	"S3BucketPolicy" : {
      "Type" : "AWS::S3::BucketPolicy",
      "Properties" : {
        "PolicyDocument": {
          "Id":"PrivateBucketPolicy",
          "Statement":[
 		    {
              "Sid":"ReadAccessPrivate",
	          "Action":["s3:GetObject"],
	          "Effect":"Allow",
	          "Resource": { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3Bucket" } , "/*" ]]},
	          "Principal":{ "AWS": { "Fn::GetAtt" : [ "CfnUser", "Arn" ]} }
            }
		  ]  
        },
        "Bucket" : {"Ref" : "S3Bucket"}
      }
    },

    "HostKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref": "CfnUser" }
      }
    },

    "WebServer": {  
      "Type": "AWS::EC2::Instance",
 	  "DependsOn" : "S3BucketPolicy",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "tomcat6"       : [],
				"git"           : [],
                "subversion"    : [],
				"gcc"			: [],
				"libxslt-devel" : [],
				"ruby-devel"	: []
              }
            },

            "sources" : {
              "/opt/aws/apitools/" : "https://s3.amazonaws.com/cdcourse/repo/CloudFormation-CLI.zip",
			  "/usr/share/tomcat6/scripts/" : "https://s3.amazonaws.com/cdcourse/repo/jenkins_utilities.tar.gz"
            },

            "files" : {
              "/usr/bin/aws" : { 
                "source" : "https://raw.github.com/stelligent/continuous_integration_example/master/software/repo/aws", 
                "mode" : "000777", 
                "owner" : "tomcat",
                "group" : "tomcat",
				"authentication" : "S3AccessCreds"
              },
              "/usr/share/tomcat6/webapps/jenkins.war" : { 
                "source" : "http://mirrors.jenkins-ci.org/war-stable/latest/jenkins.war", 
                "mode" : "000700", 
                "owner" : "tomcat",
                "group" : "tomcat",
				"authentication" : "S3AccessCreds"
              },
              "/usr/share/tomcat6/webapps/nexus.war" : { 
                "source" : "http://www.sonatype.org/downloads/nexus-2.0.3.war", 
                "mode" : "000700", 
                "owner" : "tomcat",
                "group" : "tomcat",
				"authentication" : "S3AccessCreds"
              },
			  "/usr/share/tomcat6/.ssh/id_rsa" : { 
                "source" : { "Fn::Join" : ["", ["https://s3.amazonaws.com/", { "Ref" : "S3KeysBucket" }, "/id_rsa"]]}, 
                "mode" : "000600", 
                "owner" : "tomcat",
                "group" : "tomcat",
				"authentication" : "S3AccessCreds"
              },
			  "/usr/share/tomcat6/cd00.pem" : { 
                "source" : "https://s3.amazonaws.com/cd00creds/cd00.pem",
                "mode" : "000600", 
                "owner" : "tomcat",
                "group" : "tomcat",
				"authentication" : "S3AccessCreds"
              },
			  "/usr/share/tomcat6/aws_access" : {
                "content" : { "Fn::Join" : ["", [
                  "AWSAccessKeyId=", { "Ref" : "HostKeys" }, "\n",
                  "AWSSecretKey=", {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]}
                  ]]},
                "mode"   : "000400",
                "owner"  : "tomcat",
                "group"  : "tomcat",
				"authentication" : "S3AccessCreds"
              },
              "/usr/share/tomcat6/.awssecret" : {
                "content" : { "Fn::Join" : ["", [
                  { "Ref" : "HostKeys" }, "\n",
                  {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]}
                  ]]},
                "mode"   : "000400",
                "owner"  : "tomcat",
                "group"  : "tomcat",
				"authentication" : "S3AccessCreds"
              },
              "/etc/cron.hourly/jenkins_backup.sh" : {
                "content" : { "Fn::Join" : ["", [
				"#!/bin/bash -v\n",
				"# Change into your jenkins home.\n",

				"cd /usr/share/tomcat6/.jenkins\n",

				"# Add any new conf files, jobs, users, and content.\n",
				"git add -f *.xml jobs/*/config.xml .gitignore\n",

				"# Ignore things we don't care about\n",
				"cat > .gitignore <<EOF\n",
				"log\n",
			    "*.log\n",
				"*.tmp\n",
				"*.old\n",
				"*.bak\n",
				"*.jar\n",
				".*\n",
				"plugins/\n",
				"updates/\n",
				"jobs/*/builds\n",
				"jobs/*/last*\n",
				"jobs/*/next*\n",
				"jobs/*/*.csv\n",
				"jobs/*/*.txt\n",
				"jobs/*/*.log\n",
				"jobs/*/workspace\n",
				"EOF\n",

				"# Remove anything from git that no longer exists in jenkins.\n",
				"git status --porcelain | grep '^ D ' | awk '{print $2;}' | xargs -r git rm\n",

				"# And finally, commit and push\n",
				"git commit -m 'Automated commit of jenkins configuration' -a\n",
				"git push\n"
                ]]},
                "mode"   : "000500",
                "owner"  : "root",
                "group"  : "root"
              },
			  "/usr/share/tomcat6/scripts/config/aws.config" : {
				"content" : { "Fn::Join" : ["", [
				  "AWS.config(\n",
					":access_key_id => \"", { "Ref" : "HostKeys" }, "\",\n",
					":secret_access_key => \"", {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]}, "\")\n"
                  ]]},
				"mode"   : "000500",
                "owner"  : "tomcat",
                "group"  : "tomcat"
			  }
            }
          }
        },
		"AWS::CloudFormation::Authentication" : {
		  "S3AccessCreds" : {
		    "type" : "S3",
		    "accessKeyId" : { "Ref" : "HostKeys" },
		    "secretKey" : {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]},
		    "buckets" : [ { "Ref" : "S3Bucket"} ]
		  }
		}
      },
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "FrontendGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "yum -y install java-1.6.0-openjdk*\n",
          "yum update -y aws-cfn-bootstrap\n",
			
          "# Install packages\n",
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackName" }, " -r WebServer ",
          "    --access-key ",  { "Ref" : "HostKeys" },
          "    --secret-key ", {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]},
          "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",
        
		  "# Installing Ruby 1.9.3 from RPM\n",
		  "wget -P /home/ec2-user/ https://s3.amazonaws.com/cdcourse/repo/ruby-1.9.3p0-2.amzn1.x86_64.rpm\n",
		  "rpm -Uvh /home/ec2-user/ruby-1.9.3p0-2.amzn1.x86_64.rpm\n",
		
		  "# Install Bundler\n",
		  "gem install bundler --no-rdoc --no-ri\n",
		  "gem install aws-sdk --no-rdoc --no-ri\n",
		  "gem install cucumber --no-rdoc --no-ri\n",
		  "gem install net-ssh --no-rdoc --no-ri\n",
		  "gem install capistrano --no-rdoc --no-ri\n",
        
          "rm -rf /usr/share/tomcat6/.jenkins\n",
          "git clone git@github.com:stelligent/continuous_integration_example.git /usr/share/tomcat6/.jenkins\n",

          "# Pull down Jenkins Plugins\n",
		  "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/s3/0.2.0/s3.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/snsnotify/1.6/snsnotify.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/ant/1.1/ant.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/build-pipeline-plugin/1.2.3/build-pipeline-plugin.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/copyartifact/1.21/copyartifact.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/cvs/2.1/cvs.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/grails/1.5/grails.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/groovy/1.12/groovy.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/javadoc/1.0/javadoc.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/maven-plugin/1.456/maven-plugin.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/jenkins-cloudformation-plugin/0.9/jenkins-cloudformation-plugin.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/ssh-slaves/0.21/ssh-slaves.hpi\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/translation/1.9/translation.hpi\n",
    
		  "# Update main Jenkins config\n",
		  "sed -i s@<accesskey>*</accessKey>@<accesskey>", { "Ref" : "HostKeys" }, "</accesskey>@ /usr/share/tomcat/.jenkins/hudson.plugins.s3.S3BucketPublisher.xml\n",
		  "sed -i s@<secretKey>*</secretKey>@<secretKey>", {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]}, "</secretKey>@ /usr/share/tomcat/.jenkins/hudson.plugins.s3.S3BucketPublisher.xml\n",

		  "# Add AWS Credentials to Tomcat\n",
		  "echo \"AWS_ACCESS_KEY=", { "Ref" : "HostKeys" }, "\" >> /etc/sysconfig/tomcat6\n",
		  "echo \"AWS_SECRET_ACCESS_KEY=", {"Fn::GetAtt": ["HostKeys", "SecretAccessKey"]}, "\" >> /etc/sysconfig/tomcat6\n",
		  "echo \"AWS_CLOUDFORMATION_HOME=/opt/aws/apitools/cfn/\" >> /etc/sysconfig/tomcat6\n",
          
          "chown -R tomcat:tomcat /usr/share/tomcat6/\n",
          "chmod +x /opt/aws/apitools/cfn/bin/*\n",

          "service tomcat6 restart\n",
		  "rm -rf /usr/share/tomcat6/.jenkins/plugins/subversion*\n",
          "wget -P /usr/share/tomcat6/.jenkins/plugins/ http://updates.jenkins-ci.org/download/plugins/subversion/1.40/subversion.hpi\n",
		  "service tomcat6 restart\n",
          
          "/opt/aws/bin/cfn-signal", " -e 0", " '", { "Ref" : "WaitHandle" }, "'"
        ]]}}
      }
    },

    "IPAddress" : {
      "Type" : "AWS::EC2::EIP"
    },
    
    "IPAssoc" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "InstanceId" : { "Ref" : "WebServer" },
        "EIP" : { "Ref" : "IPAddress" }
       }
    },
    
    "FrontendGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH and access to Apache and Tomcat",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"}
        ]
      }      
    },
    
    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WebServer",
      "Properties" : {
        "Handle" : { "Ref" : "WaitHandle" },
        "Timeout" : "990"
      }
    }          
  },
  
  "Outputs" : {
    "JenkinsURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Ref" : "IPAddress" }, ":8080/jenkins"]] },
      "Description" : "URL for newly created Jenkins app"
    },
    "NexusURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Ref" : "IPAddress" }, ":8080/nexus"]] },
      "Description" : "URL for newly created Nexus repository"
    },
    "InstanceIPAddress" : {
      "Value" : { "Ref" : "IPAddress" }
    }
  }
}
